import React, { useState, useEffect } from 'react';

// import { useWindowSize } from '../hooks/useWindowSize';

import LogoControls from './LogoControls';

import { LogoColorsInt, RectInt } from '../model';

type props = {
  SVGWidth: number;
  logoColors?: LogoColorsInt;
}

const Logo = (props:props) => {

  const {
    SVGWidth
} = props

// let window = useWindowSize();
// console.log(window)

//* open click me display after a timeout.
// useEffect(() => {
//   setTimeout(() => {
//     setClickMeOn(true)
//     console.log('click me')
//   }, 5000)
// }, [])



//* ================= logo controls ================= *//
const [logoColors, setLogoColors] = useState<LogoColorsInt>({
  skin: '#fff',
  lens: '#fff',
  hair: '#000',
  frame: '#000',
  shirt: '#55505c',
  trim: '#46424c',
  buttons: '#d5d5d5'
})

const eyeD = 3; // constant for magnitude of eye movements
const [clickMeOn, setClickMeOn] = useState<boolean>(false)
const [svgMousePos, setSvgMousePos] = useState({ x: 0, y: 0 })
const [eyeAdjLeft, setEyeAdjLeft] = useState<{ x: number, y: number }>({ x: 0, y: 0 });
const [eyeAdjRight, setEyeAdjRight] = useState<{ x: number, y: number }>({ x: 0, y: 0 });
const [mouseIn, setMouseIn] = useState<boolean>(false)

const handleFaceClick = () => {
  // console.log('clicked face')
  setLogoColors({ ...logoColors, frame: randomDarkColor() })
  setClickMeOn(false)
}

const handleShirtClick = () => {
  setLogoColors({ ...logoColors, shirt: randomDarkColor(), trim: randomDarkColor() })
  setClickMeOn(false)
}

//* =================== rectangle controls ====================== *//
const [rects, setRects] = useState<RectInt[]>([
  {
    id: 1,
    x: 40,
    y: 40,
    width: 220,
    height: 280,
    color: '#c8c8c8'
  },
  {
    id: 2,
    x: 70,
    y: 200,
    width: 360,
    height: 230,
    color: '#ddd'
  },
  {
    id: 3,
    x: 260,
    y: 100,
    width: 200,
    height: 250,
    color: '#eee'
  },
])

const handleRectClick = (id: number) => {
  // console.log('click')
  const rectToChange = rects.filter(rect => rect.id === id)[0];
  rectToChange.color = randomLightColor();
  setRects([...rects.filter(rect => rect.id != id), rectToChange].sort((a, b) => a.id - b.id))
  setClickMeOn(false)
}

const handleMouseMove = (e: React.MouseEvent) => {
  if (!mouseIn) return
  // console.log(e);
  const svgElement = e.currentTarget as unknown as SVGGraphicsElement;
  const screenCTM = svgElement.getScreenCTM();

  if (screenCTM) {
    const domPoint = new DOMPoint(e.clientX, e.clientY);
    const pointTransformed = domPoint.matrixTransform(screenCTM.inverse())
    setSvgMousePos({ x: pointTransformed.x, y: pointTransformed.y })

    // console.log(svgMousePos)
    setEyeAdjLeft(calcLeftEye(svgMousePos));
    setEyeAdjRight(calcRightEye(svgMousePos))
    // console.log(eyeAdjLeft)

  } else {
    console.warn('unable to get screen CTM')
  }
  // center of face 
}

const calcLeftEye = (mousePos: { x: number; y: number }) => {
  // origin of left eye: (220,238)
  // usecase: setEyeAdjLeft(calcLeftEye(mousePos)). so, return x and y coords

  const dy = mousePos.y - 238;
  const dx = mousePos.x - 220;
  if (dx === 0 && dy === 0) return { x: 0, y: 0 }

  // const distance = Math.sqrt(Math.pow(dy, 2) + Math.pow(dx, 2));
  let distAdj = eyeD;
  // adjusted for very close to the eye
  // if (distance < 50) distAdj = Number(((distance / 50) * eyeD).toFixed(2));
  const θ = Math.atan(dy / dx);
  let xPos = 1.2 * distAdj * Math.cos(θ);
  if (dx < 0) xPos = -xPos;
  let yPos = distAdj * Math.sin(θ)
  if (dy < 0) yPos = -Math.abs(yPos)
  else yPos = Math.abs(yPos)

  return ({ x: xPos, y: yPos })
}

const calcRightEye = (mousePos: { x: number; y: number }) => {
  // origin of right eye: (294,235)

  const dy = mousePos.y - 238;
  const dx = mousePos.x - 294;
  if (dx === 0 && dy === 0) return { x: 0, y: 0 }
  // const distance = Math.sqrt(Math.pow(dy, 2) + Math.pow(dx, 2));
  let distAdj = eyeD;
  // adjusted for very close to the eye
  // if (distance < 50) distAdj = Number(((distance / 50) * eyeD).toFixed(2));
  const θ = Math.atan(dy / dx);
  let xPos = 1.2 * distAdj * Math.cos(θ);
  if (dx < 0) xPos = -xPos;
  let yPos = distAdj * Math.sin(θ)
  if (dy < 0) yPos = -Math.abs(yPos)
  else yPos = Math.abs(yPos)
  return ({ x: xPos, y: yPos })

}
// 
//todo: rectangle drag functionality

//* ================== utility ================== *//

function randomLightColor() {
  const r = Math.floor(Math.random() * (154)) + 100;
  const g = Math.floor(Math.random() * (154)) + 100;
  const b = Math.floor(Math.random() * (154)) + 100;
  // console.log('random color: ', r, g, b)
  return `rgb(${r}, ${g}, ${b})`
}

function randomDarkColor() {
  const r = Math.floor(Math.random() * (154));
  const g = Math.floor(Math.random() * (154))
  const b = Math.floor(Math.random() * (154));
  // console.log('random color: ', r, g, b)
  return `rgb(${r}, ${g}, ${b})`
}

const handleMouseLeave = () => {
  () => setMouseIn(false);
  setEyeAdjLeft({ x: 0, y: 0 });
  setEyeAdjRight({ x: 0, y: 0 })
}
return (
  <div id='logo-div'>
    {/* <LogoControls logoColors={logoColors} setLogoColors={setLogoColors} rects={rects} setRects={setRects} /> */}

    <svg version="1.0"
      xmlns="http://www.w3.org/2000/svg"
      width={SVGWidth}
      viewBox={`0 0 500 500`}
      preserveAspectRatio="xMidYMid meet"
      fill="#000"
      onMouseEnter={() => setMouseIn(true)}
      onMouseLeave={handleMouseLeave}
      onMouseMove={(e) => handleMouseMove(e)}
      onClick={(e) => console.log('x:', e.clientX, 'y:', e.clientY)}
      style={{ cursor: mouseIn ? 'pointer' : '' }}
    >
      {/* //* ================ MASKS ================= */}
      {/* background circle mask */}
      <mask id='bg-mask'>

        {/* background and mask */}
        <rect width='1000' height='1000' fill='black' />
        <circle cx='250' cy='270' r='210' fill='white' />
      </mask>

      {/* mask for body */}
      <mask id='bg-mask-2'>
        <rect
          width='1000'
          height='1000'
          fill='black'
        />
        <circle
          cx='250'
          cy='200'
          r='210'
          fill='white'
        />
      </mask>

      {/* left eye mask */}
      <mask id='left-eye' >
        <rect
          width='1000'
          height='1000'
          fill='black'
        />
        <path transform='translate(0,0)' fill='white' d="M 205.161 171.198 C 205.161 171.198 206.695 167.914 207.848 166.555 C 208.879 165.339 210.117 164.355 211.496 163.554 C 212.806 162.793 214.223 162.15 215.707 161.843 C 217.397 161.493 219.174 161.489 220.883 161.726 C 222.052 161.888 223.18 162.308 224.268 162.765 C 225.848 163.429 227.321 164.331 228.787 165.22 C 230.864 166.479 233.817 168.876 233.817 168.876 C 233.817 168.876 232.713 169.074 231.65 169.094 C 230.564 169.114 229.512 169.32 228.449 169.545 C 226.71 169.913 223.343 171.101 223.343 171.087 C 223.343 171.073 220.319 171.793 218.779 171.95 C 216.793 172.152 214.787 172.096 212.792 172.044 C 211.603 172.013 209.233 171.802 209.233 171.802 L 205.161 171.198 Z" />
      </mask>
      {/* right eye mask */}
      <mask id='right-eye'>
        <rect
          width='1000'
          height='1000'
          fill='black'
        />
        <path fill='white' d="M 271.375 167.403 C 271.375 167.403 272.61 164.167 273.71 162.872 C 274.706 161.699 276.042 160.813 277.416 160.121 C 279.318 159.162 281.416 158.53 283.529 158.262 C 285.515 158.01 287.568 158.12 289.53 158.521 C 291.299 158.882 292.996 159.596 294.599 160.427 C 295.963 161.134 297.255 162.005 298.411 163.016 C 299.575 164.033 301.506 166.47 301.506 166.47 C 301.506 166.47 298.6 166.363 297.151 166.455 C 294.868 166.599 292.622 167.115 290.345 167.343 C 288.847 167.493 287.346 167.668 285.841 167.657 C 284.427 167.647 283.024 167.416 281.615 167.303 C 280.146 167.185 278.68 166.985 277.207 166.967 C 276.083 166.953 274.959 167.05 273.838 167.139 C 273.015 167.204 271.332 167.454 271.375 167.403 Z" />
      </mask>


      {/* //* ================================================= */}
      <LogoControls logoColors={logoColors} setLogoColors={setLogoColors} rects={rects} setRects={setRects} />
      <circle cx='250' cy='270' r='215' fill='none' stroke={logoColors.frame} strokeWidth='10' />


      <g mask='url(#bg-mask)'>
        {rects.map(rect => {
          return (
            <rect
              key={rect.id}
              width={rect.width}
              height={rect.height}
              transform={`translate(${rect.x}, ${rect.y})`}
              fill={rect.color}
              stroke='none'
              onClick={() => handleRectClick(rect.id)}
            />
          )
        })}
      </g>
      <g transform={`translate(0,70)`}
        fill="#000000"
        stroke="none"
        mask='url(#bg-mask-2)'
      >
        {/*
            //* ================ FACE ================= *
            */}
        {/* 2. face */}
        <g onClick={handleFaceClick} >
          <path fill={logoColors.skin} stroke='rgb(0, 0, 0)' d="M 183.466 199.068 C 183.466 199.068 184.515 189.962 184.892 184.512 C 185.91 169.805 187.03 168.455 186.965 160.183 C 186.949 158.179 186.354 156.197 186.431 154.195 C 186.556 150.934 187.196 147.69 188.044 144.538 C 188.873 141.457 191.417 135.581 191.417 135.581 C 191.417 135.581 194.183 126.959 196.367 123.152 C 198.967 118.619 205.925 111.215 205.925 111.215 L 223.085 99.1 C 223.085 99.1 233.182 94.581 238.554 93.448 C 243.97 92.306 249.604 91.95 255.123 92.363 C 261.819 92.864 268.564 94.332 274.932 96.46 C 280.555 98.339 285.89 101.035 290.969 104.072 C 294.227 106.02 297.649 107.958 300.14 110.823 C 303.634 114.842 307.73 124.88 307.73 124.88 L 312.273 138.301 C 312.273 138.301 316.006 147.538 317.106 152.375 C 318.851 160.05 319.848 175.828 319.848 175.828 L 320.898 188.353 C 320.898 188.353 321.871 194.943 321.962 198.317 C 322.071 202.348 321.429 206.374 320.961 210.477 C 320.552 214.065 320.17 217.893 319.796 221.485 C 319.248 226.742 319.2 236.104 319.2 236.104 C 319.2 236.104 318.347 244.934 317.392 248.603 C 316.503 252.017 315.568 255.299 313.995 258.457 C 312.359 261.741 310.741 265.212 308.234 267.836 C 306.377 269.78 303.839 270.546 301.748 272.235 C 298.687 274.708 296.359 277.985 293.423 280.605 C 290.683 283.049 287.585 285.065 284.782 287.436 C 281.826 289.936 279.555 293.351 276.168 295.227 C 273.321 296.804 269.994 297.408 266.776 297.892 C 262.232 298.576 257.558 298.37 252.963 298.419 C 249.622 298.455 246.245 298.849 242.969 298.19 C 237.946 297.18 234.048 297.149 228.789 292.261 C 225.088 288.822 221.818 284.797 217.844 281.677 C 214.764 279.259 211.233 277.465 208.096 275.12 C 204.192 272.202 200.015 271.214 196.834 265.794 C 194.287 261.454 192.28 256.587 190.99 251.652 C 189.001 244.046 189.057 236.059 188.175 228.235 C 187.595 223.094 187.561 217.828 186.537 212.766 C 185.732 208.789 184.782 204.021 183.466 199.068 Z" />
          {/* left ear */}
          <path fill={logoColors.skin} stroke='rgb(0, 0, 0)' d="M 187.045 215.771 C 186.276 210.535 185.362 205.279 183.738 200.242 C 182.281 195.721 178.008 187.196 178.008 187.196 C 178.008 187.196 175.91 187.44 175.3 188.05 C 174.906 188.444 174.768 189.148 174.707 189.743 C 174.614 190.649 174.731 191.969 174.884 192.867 C 175.149 194.421 176.465 198.402 176.831 201.246 C 177.06 203.023 177.046 204.829 176.98 206.62 C 176.917 208.329 176.58 210.074 176.635 211.784 C 176.783 216.408 176.206 216.983 176.738 225.088 C 176.862 226.972 177.465 228.886 178.48 230.478 C 179.523 232.112 181.08 233.438 182.744 234.433 C 184.56 235.519 188.748 236.493 188.748 236.493 C 188.748 236.493 188.053 222.628 187.045 215.771 Z" />

          {/* right ear */}
          <path fill={logoColors.skin} stroke='rgb(0, 0, 0)' d="M 319.367 231.168 C 319.367 231.168 323.303 230.875 325.177 225.837 C 327.029 220.859 326.547 212.959 326.547 212.937 C 326.547 212.915 326.14 204.668 325.604 200.552 C 325.056 196.346 323.283 188.056 323.283 188.056 C 323.283 188.056 322.832 192.755 320.96 210.889 C 319.155 228.365 319.367 231.168 319.367 231.168 Z" />

          {/* hair */}
          <path d="M 183.086 199.374 C 183.086 199.374 176.844 186.055 174.876 178.839 C 172.758 171.075 171.016 163.107 170.658 155.067 C 170.001 140.331 167.686 136.051 168.165 126.434 C 168.446 120.789 168.833 114.915 171.084 109.73 C 174.214 102.52 179.303 96.194 184.698 90.478 C 191.764 82.991 199.751 76.05 208.841 71.217 C 216.561 67.113 225.21 64.583 233.868 63.367 C 247.417 61.464 261.484 61.705 274.9 64.385 C 285.132 66.429 296.05 69.04 304.089 75.691 C 308.51 79.349 310.586 85.188 313.203 90.295 C 316.783 97.28 318.907 104.802 321.768 112.111 C 324.033 117.898 327.576 123.43 328.654 129.55 C 330.574 140.449 329.234 151.715 328.382 162.749 C 327.678 171.876 324.391 189.919 324.391 189.919 L 322.497 199.777 L 320.341 179.041 L 316.784 149.889 C 316.784 149.889 307.679 124.4 307.764 124.4 C 307.849 124.4 302.738 113.399 298.514 109.261 C 293.351 104.203 286.469 101.082 279.782 98.339 C 272.166 95.214 264.078 92.662 255.858 92.211 C 247.963 91.777 239.911 93.159 232.373 95.545 C 226.309 97.465 220.715 100.597 215.379 104.224 C 210.176 107.76 204.834 112.063 200.882 116.891 C 196.825 121.846 191.819 133.723 191.819 133.723 L 186.663 149.12 L 186.633 166.478 L 183.086 199.374 Z" />

          {/* 3. glasses frame */}
          <path fill={logoColors.frame} d="M 182.16 163.235 C 182.16 163.235 182.285 161.368 182.956 160.819 C 184.544 159.518 186.69 159.158 188.637 158.552 C 193.449 157.054 197.826 155.787 203.378 155.196 C 210.834 154.403 218.582 153.461 226.081 153.421 C 233.103 153.383 240.075 154.66 247.09 154.963 C 250.738 155.121 254.898 155.793 258.042 155.106 C 263.353 153.945 267.141 151.786 272.405 150.95 C 277.669 150.114 278.176 150.082 281.086 150.005 C 288.429 149.81 295.77 150.648 303.09 151.225 C 308.361 151.64 315.071 152.028 318.859 152.88 C 319.922 153.119 320.959 153.716 321.675 154.537 C 322.406 155.375 322.904 156.016 322.958 157.616 C 323.025 159.604 323.517 161.633 323.118 163.582 C 322.932 164.492 322.661 165.417 321.955 166.113 C 321.421 166.64 320.306 166.516 319.762 167.221 C 317.601 170.021 317.873 174.405 316.924 177.821 C 315.997 181.158 314.988 183.718 313.056 186.027 C 311.596 187.773 309.52 188.976 307.454 189.932 C 305.072 191.034 305.596 191.261 299.842 191.942 C 295.23 192.488 290.436 192.546 285.8 192.267 C 282.409 192.063 278.943 191.942 275.726 190.734 C 272.502 189.524 269.316 187.754 266.93 185.178 C 263.963 181.974 262.414 177.554 260.569 173.596 C 258.402 168.947 259.702 167.873 258.706 165.176 C 258.398 164.343 258.125 163.406 257.453 162.825 C 256.619 162.103 255.438 161.806 254.339 161.706 C 253.002 161.584 251.303 161.388 249.542 162.531 C 248.651 163.11 247.023 163.604 246.533 165.89 C 245.632 170.095 246.102 174.549 244.378 178.612 C 242.955 181.964 240.932 185.263 237.914 187.669 C 234.884 190.085 232.313 191.639 227.393 193.545 C 222.473 195.451 213.168 197.34 206.53 196.488 C 201.796 195.881 198.184 195.861 193.797 191.523 C 190.73 188.49 189.902 184.776 188.676 179.552 C 188.037 176.831 187.291 174.788 186.401 171.481 C 186.094 170.341 185.807 170.386 185.218 170.092 C 184.601 169.784 183.601 170.226 183.084 169.764 C 182.199 168.972 182.27 166.168 182.27 166.168 C 182.27 166.168 182.17 163.394 182.16 163.235 Z" />

          {/* 4. right lens */}
          <path fill={logoColors.lens} d="M 262.378 161.607 C 263.337 159.04 264.476 157.789 266.125 156.534 C 268.17 154.978 273.377 153.916 273.377 153.916 C 273.377 153.916 279.929 153.06 283.226 152.979 C 289.035 152.836 294.864 153.143 300.64 153.777 C 303.134 154.051 305.725 154.142 308.056 155.071 C 309.731 155.738 311.599 157.172 312.712 158.59 C 314.107 160.367 314.449 162.365 314.742 164.42 C 315.208 167.685 314.699 170.342 314.177 174.304 C 313.601 178.679 312.972 180.022 311.878 182.176 C 310.169 185.539 309.063 185.66 307.152 186.719 C 304.725 188.064 302.44 188.352 299.079 188.751 C 294.637 189.278 290.129 189.141 285.661 188.941 C 282.24 188.788 278.139 187.835 278.139 187.835 C 278.139 187.835 273.71 185.953 271.831 184.463 C 270.05 183.051 268.453 181.179 267.25 179.275 C 265.208 176.044 264.008 172.312 262.876 168.661 C 262.52 167.511 262.193 165.136 262.193 165.115 C 262.193 165.115 261.967 162.707 262.378 161.607 Z" />

          {/* 22. left lens */}
          <path fill={logoColors.lens} d="M 190.594 165.6 C 191.634 163.616 193.501 161.967 195.373 160.876 C 199.077 158.716 203.772 158.566 207.889 157.855 C 213.888 156.819 219.74 156.059 225.711 156.063 C 229.455 156.066 233.579 156.122 237.032 157.568 C 239.019 158.4 240.665 159.72 241.715 161.468 C 243 163.607 243.042 165.766 242.574 168.914 C 242.045 172.471 240.975 175.917 239.317 179.058 C 237.709 182.105 237.237 183.845 232.974 187.221 C 229.923 189.637 227.231 190.479 220.793 191.974 C 216.063 193.072 211.138 193.845 206.298 193.446 C 203.256 193.195 199.917 192.855 197.462 191.041 C 195.056 189.263 193.86 186.197 192.666 183.453 C 191.041 179.717 189.711 175.642 189.544 171.54 C 189.462 169.531 189.66 167.381 190.594 165.6 Z" />


          {/* 16. right nose */}
          <path fill='none' stroke="rgb(0, 0, 0)" d="M 268.473 190.762 C 268.473 190.762 268.966 193.404 270.008 194.839 C 270.982 196.181 273.131 197.344 274.31 198.935 C 275.407 200.414 276.305 202.095 276.792 203.871 C 277.21 205.395 277.349 207.036 277.121 208.6 C 276.97 209.636 276.574 210.655 276.017 211.542 C 275.214 212.82 272.606 214.88 272.606 214.88" />

          {/* 17. right nostril */}
          <path d="M 261.946 208.04 C 262.103 207.373 262.57 206.748 263.149 206.382 C 263.966 205.866 265.088 205.812 266.027 206.038 C 267.031 206.279 268.088 206.867 268.6 207.764 C 268.996 208.458 269.21 209.514 268.736 210.157 C 268.206 210.875 267.029 210.769 266.137 210.802 C 265.275 210.834 263.586 210.365 263.586 210.365 C 263.586 210.365 262.496 210.027 262.194 209.537 C 261.934 209.115 261.837 208.502 261.946 208.04 Z" />

          {/* 18. left nostril */}
          <path stroke="rgb(0, 0, 0)" d="M 241.268 210.681 C 241.292 210.006 241.596 209.31 242.054 208.814 C 243.014 207.773 244.417 207.013 245.825 206.854 C 246.633 206.763 247.634 206.872 248.185 207.469 C 248.747 208.078 248.884 208.988 248.536 209.741 C 248.289 210.276 247.641 210.572 247.092 210.812 C 246.636 211.011 246.097 210.926 245.626 211.085 C 244.741 211.384 244.056 212.277 243.125 212.35 C 242.619 212.39 242.038 212.239 241.676 211.883 C 241.375 211.586 241.253 211.104 241.268 210.681 Z" />

          {/* 19. left nose */}
          <path fill='none' stroke='rgb(0,0,0)' d="M 238.625 193.23 C 238.625 193.23 238.405 196.438 237.77 197.88 C 237.057 199.5 233.775 202.898 233.056 205.92 C 232.559 208.011 232.607 210.385 233.465 212.356 C 234.173 213.984 235.567 215.372 237.124 216.225 C 238.495 216.976 241.731 217.108 241.731 217.108" />

          {/* 20. lips */}
          <path stroke='rgb(0, 0, 0)' fill='rgb(188, 188, 188)' d="M 226.715 244.305 L 240.035 237.571 C 240.035 237.571 243.94 234.427 246.256 233.596 C 248.013 232.966 249.969 232.651 251.816 232.924 C 253.385 233.156 256.173 234.838 256.173 234.838 C 256.173 234.838 258.506 233.235 259.852 232.913 C 261.668 232.479 265.354 233.465 265.354 233.465 C 265.354 233.465 271.517 235.535 274.415 236.986 C 277.002 238.281 281.778 241.578 281.778 241.578 C 281.778 241.578 278.767 244.96 276.936 246.259 C 274.647 247.882 271.953 248.844 269.413 250.037 C 267.21 251.072 262.724 252.968 262.724 252.968 C 262.724 252.968 260.657 253.352 259.611 253.385 C 258.06 253.433 256.519 253.042 254.968 253.056 C 252.824 253.076 250.705 253.665 248.561 253.629 C 246.09 253.587 243.542 253.515 241.203 252.718 C 238.249 251.711 235.843 249.518 233.142 247.953 C 231.01 246.718 226.715 244.305 226.715 244.305 Z" />

          {/* 21. lip crease */}
          <path fill='none' stroke='rgb(0, 0, 0)' strokeOpacity={0.61} d="M 230.836 243.935 C 230.836 243.935 235.989 243.029 240.356 242.857 C 244.628 242.688 248.897 243.501 253.171 243.387 C 256.726 243.292 260.243 242.592 263.793 242.38 C 269.475 242.041 278.653 241.979 278.653 241.979" />

          {/* left eye crease */}
          <path fill='none' stroke='rgb(0, 0, 0)' d="M 202.173 168.629 C 202.173 168.629 204.481 163.536 206.561 161.809 C 208.748 159.994 211.678 159.186 214.458 158.594 C 217.202 158.009 220.116 157.782 222.871 158.313 C 225.414 158.803 227.868 159.946 229.985 161.438 C 230.877 162.067 232.233 163.818 232.233 163.818" />

          {/* left eye outline */}
          <path stroke='rgb(0, 0, 0)' fill='rgb(255, 255, 255)' d="M 205.161 171.198 C 205.161 171.198 206.695 167.914 207.848 166.555 C 208.879 165.339 210.117 164.355 211.496 163.554 C 212.806 162.793 214.223 162.15 215.707 161.843 C 217.397 161.493 219.174 161.489 220.883 161.726 C 222.052 161.888 223.18 162.308 224.268 162.765 C 225.848 163.429 227.321 164.331 228.787 165.22 C 230.864 166.479 233.817 168.876 233.817 168.876 C 233.817 168.876 232.713 169.074 231.65 169.094 C 230.564 169.114 229.512 169.32 228.449 169.545 C 226.71 169.913 223.343 171.101 223.343 171.087 C 223.343 171.073 220.319 171.793 218.779 171.95 C 216.793 172.152 214.787 172.096 212.792 172.044 C 211.603 172.013 209.233 171.802 209.233 171.802 L 205.161 171.198 Z" />
//* ===================== EYES ============================

          <g id='left-eye' mask='url(#left-eye)'>
            {/* left iris */}
            <path transform={`translate(${eyeAdjLeft.x}, ${eyeAdjLeft.y})`} stroke='rgb(0, 0, 0)' fill='rgb(94, 94, 94)' d="M 213.982 162.617 C 213.343 163.123 212.839 163.862 212.558 164.605 C 212.177 165.611 212.181 166.75 212.383 167.807 C 212.602 168.952 213.013 170.09 213.842 170.909 C 214.449 171.508 215.021 172.031 215.762 172.313 C 216.966 172.771 218.483 172.867 219.609 172.681 C 220.93 172.463 222.387 171.806 223.51 170.928 C 224.194 170.394 224.84 169.688 225.118 168.881 C 225.429 167.976 225.483 166.958 225.309 166.017 C 225.135 165.079 224.684 164.181 224.109 163.42 C 223.684 162.857 222.86 162.093 222.052 161.723 C 220.702 161.104 219.204 160.89 217.77 161.06 C 216.414 161.221 215.052 161.77 213.982 162.617 Z" />


            {/* left pupil */}
            <path transform={`translate(${eyeAdjLeft.x}, ${eyeAdjLeft.y})`} d="M 216.593 164.497 C 217.252 164.009 218.312 163.824 219.131 163.862 C 220.081 163.906 221.208 164.149 221.836 164.771 C 222.36 165.29 222.72 166.214 222.649 166.946 C 222.59 167.547 222.213 168.156 221.73 168.552 C 221.098 169.07 220.201 169.506 219.355 169.549 C 218.311 169.602 217.003 169.276 216.19 168.563 C 215.652 168.091 215.363 167.374 215.407 166.703 C 215.464 165.826 215.887 165.02 216.593 164.497 Z" />
          </g>
          {/* right eye outline */}
          <path stroke='rgb(0, 0, 0)' fill='rgb(255, 255, 255)' d="M 271.375 167.403 C 271.375 167.403 272.61 164.167 273.71 162.872 C 274.706 161.699 276.042 160.813 277.416 160.121 C 279.318 159.162 281.416 158.53 283.529 158.262 C 285.515 158.01 287.568 158.12 289.53 158.521 C 291.299 158.882 292.996 159.596 294.599 160.427 C 295.963 161.134 297.255 162.005 298.411 163.016 C 299.575 164.033 301.506 166.47 301.506 166.47 C 301.506 166.47 298.6 166.363 297.151 166.455 C 294.868 166.599 292.622 167.115 290.345 167.343 C 288.847 167.493 287.346 167.668 285.841 167.657 C 284.427 167.647 283.024 167.416 281.615 167.303 C 280.146 167.185 278.68 166.985 277.207 166.967 C 276.083 166.953 274.959 167.05 273.838 167.139 C 273.015 167.204 271.332 167.454 271.375 167.403 Z" />


          {/* right iris */}
          <g id='right eye' mask='url(#right-eye)'>
            <path transform={`translate(${eyeAdjRight.x}, ${eyeAdjRight.y})`} stroke='rgb(0, 0, 0)' fill='rgb(94, 94, 94)' d="M 280.874 158.615 C 280.874 158.615 279.736 159.539 279.284 160.157 C 278.774 160.854 278.442 161.825 278.42 162.794 C 278.403 163.55 278.842 164.624 279.233 165.346 C 279.579 165.985 280.638 167.122 280.638 167.122 C 280.638 167.122 282.748 168.124 283.841 168.208 C 285.088 168.304 286.147 168.382 287.266 168.157 C 288.011 168.007 289.382 167.306 289.382 167.306 C 289.382 167.306 290.462 166.292 290.741 165.682 C 291.098 164.902 291.26 164.031 291.331 163.176 C 291.399 162.351 291.34 161.508 291.167 160.698 C 291.041 160.107 290.196 159.043 290.196 159.043 C 290.196 159.043 288.827 157.741 287.804 157.488 C 286.58 157.185 285.217 157.277 284.083 157.4 C 283.142 157.502 280.874 158.615 280.874 158.615 Z" />

            {/* right pupil */}
            <path transform={`translate(${eyeAdjRight.x}, ${eyeAdjRight.y})`} d="M 281.517 162.627 C 281.558 161.998 281.874 161.365 282.312 160.912 C 282.894 160.312 283.728 159.931 284.553 159.796 C 285.46 159.648 286.472 159.743 287.282 160.175 C 287.947 160.53 288.528 161.218 288.741 161.941 C 288.97 162.719 288.84 163.611 288.411 164.266 C 287.963 164.95 287.116 165.356 286.323 165.554 C 285.427 165.778 284.431 165.681 283.558 165.38 C 282.985 165.183 282.419 164.841 282.059 164.354 C 281.7 163.869 281.478 163.229 281.517 162.627 Z" />
          </g>
          {/* right eye crease */}
          <path fill='none' stroke='rgb(0, 0, 0)' d="M 273.865 160.238 C 273.865 160.238 274.779 158.275 275.544 157.545 C 276.727 156.416 278.268 155.649 279.825 155.147 C 282.555 154.267 285.369 154.206 288.234 154.345 C 290.451 154.452 292.929 154.907 295.023 155.743 C 296.81 156.457 298.303 157.525 299.719 158.722 C 301.196 159.97 303.599 163.033 303.599 163.033" />

          {/* left eyebrow */}
          <path d="M 190.764 154.722 C 190.764 154.722 194.852 150.967 197.432 149.205 C 200.25 147.279 203.42 145.934 206.631 144.707 C 209.439 143.634 215.397 142.236 215.414 142.236 C 215.431 142.236 219.113 141.52 220.975 141.619 C 223.299 141.743 227.793 143.12 227.793 143.12 C 227.793 143.12 230.835 144.541 232.46 145.058 C 233.795 145.482 235.124 146.051 236.524 146.01 C 237.586 145.979 238.776 145.83 239.668 145.253 C 240.247 144.879 240.748 144.289 240.948 143.629 C 241.172 142.89 241.102 142.015 240.766 141.32 C 240.348 140.455 239.392 139.883 238.656 139.357 C 236.864 138.077 232.873 136.711 232.873 136.711 C 232.873 136.711 228.34 135.314 225.985 134.958 C 223.166 134.532 220.272 134.365 217.422 134.532 C 214.357 134.712 211.309 135.016 208.367 135.983 C 205.733 136.849 203.143 137.945 200.842 139.588 C 198.503 141.258 196.277 143.272 194.594 145.602 C 193.379 147.284 192.438 149.17 191.678 151.101 C 191.124 152.509 190.732 154.209 190.764 154.722 Z" />

          {/* right eyebrow */}
          <path d="M 264.617 141.692 C 264.638 140.634 265.036 139.551 265.652 138.691 C 266.619 137.341 268.109 136.392 269.589 135.639 C 272.249 134.286 275.278 133.803 278.19 133.149 C 281.185 132.477 287.397 131.66 287.432 131.66 C 287.432 131.66 293.104 131.362 295.871 132.115 C 298.279 132.77 300.48 134.089 302.474 135.59 C 304.893 137.411 306.909 139.753 308.775 142.155 C 310.074 143.827 311.254 145.626 312.104 147.565 C 312.641 148.791 312.788 150.344 312.788 150.344 C 312.788 150.344 309.836 147.793 308.248 146.665 C 306.732 145.588 305.199 144.494 303.504 143.729 C 301.434 142.794 299.203 142.231 296.983 141.753 C 295.25 141.379 293.463 141.318 291.709 141.062 C 289.317 140.712 286.966 139.913 284.548 139.906 C 282.574 139.9 280.559 140.163 278.696 140.816 C 277.02 141.404 275.64 142.63 274.072 143.464 C 273.091 143.985 272.143 144.607 271.082 144.935 C 270.002 145.269 268.835 145.635 267.726 145.417 C 266.811 145.237 265.89 144.735 265.314 144.002 C 264.817 143.37 264.601 142.496 264.617 141.692 Z" />
        </g>

        {/* 
              //* ================== BODY =================
          */}

        {/* 11. neck */}
        <path fill={logoColors.skin} stroke="rgb(0, 0, 0)" d="M 200.864 271.439 C 200.864 271.439 200.092 277.937 200.076 281.202 C 200.054 285.763 200.73 292.092 201.873 296.507 C 204.252 305.692 208.038 311.017 213.243 320.381 C 217.021 327.178 230.593 336.047 230.593 336.047 L 243.331 340.543 L 249.506 353.977 L 254.836 370.275 C 254.836 370.275 256.506 360.657 258.37 356.189 C 260.221 351.751 262.767 347.545 265.844 343.849 C 268.38 340.803 274.728 335.947 274.728 335.947 C 274.728 335.947 284.716 331.55 288.511 327.796 C 292.08 324.265 294.635 319.646 296.319 314.916 C 298.764 308.05 299.354 293.262 299.354 293.262 L 300.338 273.91 C 300.338 273.91 296.483 277.343 293.947 280.414 C 291.82 282.99 288.587 284.415 286.08 286.622 C 283.915 288.529 282.048 290.755 279.901 292.683 C 278.881 293.599 277.938 294.659 276.722 295.294 C 273.835 296.801 267.317 297.945 267.317 297.945 C 267.317 297.945 259.757 298.389 255.973 298.496 C 251.919 298.611 247.829 299.124 243.808 298.596 C 240.377 298.146 236.879 297.416 233.801 295.834 C 230.258 294.013 227.528 290.918 224.511 288.316 C 221.575 285.784 219.053 282.765 215.945 280.447 C 211.251 276.947 200.864 271.439 200.864 271.439 Z" />

        {/* 12. neck shadow */}
        <path fill='rgb(197, 197, 197,.5)' d="M 201.055 271.967 C 201.055 271.967 206.603 276.926 209.345 279.44 C 213.388 283.146 217.359 286.93 221.38 290.659 C 224.944 293.964 228.35 297.022 232.538 299.489 C 236.488 301.816 240.965 303.152 245.497 303.848 C 249.497 304.462 253.696 304.272 257.719 303.836 C 261.526 303.424 268.55 301.834 268.55 301.834 L 277.081 298.12 C 277.081 298.12 286.296 292.819 290.036 289.729 C 292.845 287.408 295.268 286.133 297.153 283.014 C 298.605 280.612 299.833 275.03 299.833 275.03 C 299.833 275.03 297.401 277.421 296.079 278.68 C 294.8 279.898 294.168 281.421 292.441 282.645 C 290.318 284.15 287.465 285.969 285.784 287.363 C 284.079 288.777 283.04 289.983 281.51 291.637 C 280.735 292.476 279.836 293.742 278.655 294.57 C 275.886 296.511 273.248 297.174 269.915 297.869 C 265.713 298.745 257.1 298.936 257.1 298.936 L 248.335 299.298 C 248.335 299.298 243.589 299.148 240.651 298.517 C 237.855 297.916 234.489 297.129 232.158 295.419 C 228.116 292.454 225.145 289.626 221.92 286.376 C 217.432 281.853 213.579 279.198 213.745 279.387 L 201.055 271.967 Z" />

        <g onClick={handleShirtClick}>
          {/* 1. right shoulder */}
          <path fill={logoColors.shirt} stroke='rgb(0, 0, 0)' d="M 287.794 340.347 C 287.794 340.347 283.519 342.178 281.457 344.26 C 279.31 346.428 276.974 349.716 275.486 352.878 C 273.533 357.031 272.584 361.619 271.768 366.135 C 270.888 371.007 270.523 380.935 270.523 380.935 L 270.312 392.748 L 269.491 417.241 L 411.912 417.206 C 411.912 417.206 412.817 400.761 412.688 392.511 C 412.567 384.78 412.395 377.812 411.213 370.196 C 410.125 363.188 408.575 359.918 405.959 355.996 C 404.24 353.42 401.952 351.62 399.595 349.846 C 397.4 348.194 383.226 341.131 368.179 333.186 C 347.449 322.239 324.565 309.862 324.565 309.862 L 313.593 300.25 L 306.429 292.164 L 302.972 286.34 C 302.972 286.34 300.938 280.55 300.977 280.51 C 301.016 280.47 305.386 293.203 305.386 293.203 C 305.386 293.203 311.19 301.377 313.132 305.956 C 314.413 308.976 314.976 311.948 315.332 315.209 C 315.981 321.152 314.929 333.396 314.929 333.396 C 314.929 333.396 314.581 343.246 315.058 348.727 C 315.439 353.105 317.285 362.929 317.285 362.929 C 317.285 362.929 307.133 358.942 302.771 355.767 C 296.978 351.55 287.794 340.347 287.794 340.347 Z" />

          {/* 5. left shoulder */}
          <path stroke='rgb(0, 0, 0)' fill={logoColors.shirt} d="M 91.323 417.734 C 91.323 417.734 87.544 401.728 87.7 401.728 C 87.856 401.728 86.644 385.614 86.644 385.614 L 87.971 369.037 L 90.705 354.839 L 94.17 345.29 L 99.708 339.247 L 108.86 335.192 L 118.886 330.862 L 130.311 326.373 L 149.871 317.97 L 165.625 308.584 L 179.65 299.516 C 179.65 299.516 191.194 293.431 191.243 293.431 C 191.292 293.431 192.844 292.859 192.844 292.859 L 188.786 298.669 L 185.863 303.41 L 184.242 313.721 L 185.594 325.312 L 191.147 344.582 L 196.782 360.425 L 203.84 369.705 L 210.108 360.367 C 210.108 360.367 218.229 348.79 218.249 348.77 C 218.269 348.75 223.123 343.432 223.123 343.432 L 228.827 360.723 L 234.473 379.123 L 237.012 390.397 L 237.375 403.587 L 236.586 414.696 L 236.186 417.426 L 91.323 417.734 Z" />

          {/* 6. left trim */}
          <path stroke='rgb(0, 0, 0)' fill={logoColors.trim} d="M 237.171 402.93 L 235.794 417.445 L 243.551 417.421 L 243.113 409.258 L 244.908 397.271 L 248.001 386.392 L 252.824 375.836 L 254.872 370.337 L 249.483 353.718 L 243.291 340.528 L 231.647 336.443 L 227.239 339.447 L 223.084 343.587 L 232.857 373.96 C 232.857 373.96 237.238 393.462 237.06 393.083 L 237.171 402.93 Z" />

          {/* 7. left collar */}
          <path fill={logoColors.trim} stroke="rgb(0, 0, 0)" d="M 200.349 280.637 L 196.678 286.819 C 196.678 286.819 186.715 299.191 185.404 303.885 C 184.475 307.211 184.086 309.845 184.293 314.185 C 184.476 318.015 185.719 325.6 185.719 325.6 C 185.719 325.6 189.789 340.834 192.392 348.268 C 193.97 352.774 195.412 357.397 197.803 361.529 C 199.495 364.454 204.031 369.528 204.031 369.528 C 204.031 369.528 214.977 351.252 222.148 343.477 C 224.947 340.442 231.714 335.607 231.714 335.607 C 231.714 335.607 219.554 327.598 215.078 322.006 C 208.577 313.884 203.77 304.158 201.096 294.104 C 199.94 289.759 200.349 280.637 200.349 280.637 Z" />

          {/* 8. left button */}
          <path fill={logoColors.buttons} stroke="rgb(0, 0, 0)" d="M 221.588 351.757 C 221.588 351.757 217.925 351.137 217.737 355.631 C 217.565 359.739 221.303 359.859 221.303 359.859 C 221.303 359.859 225.518 360.369 225.492 355.625 C 225.47 351.629 221.588 351.757 221.588 351.757 Z" />

          {/* 9. top button */}
          <path fill={logoColors.buttons} stroke='rgb(0,0,0)' d="M 227.714 341.939 C 227.714 341.939 228.06 340.586 229.08 339.903 C 230.31 339.079 231.396 339.357 232.336 339.685 C 234.325 340.38 236.162 342.915 236.162 342.915 C 236.162 342.915 237.643 345.79 236.013 347.288 C 233.807 349.315 231.938 348.144 231.63 347.986 C 230.532 347.423 228.664 346.603 227.93 344.664 C 227.196 342.725 227.714 341.939 227.714 341.939 Z" />

          {/* 10. bottom button */}
          <path fill={logoColors.buttons} stroke="rgb(0, 0, 0)" d="M 239.98 375.748 C 241.114 374.68 242.985 374.254 244.507 374.587 C 245.954 374.903 247.297 376.06 247.957 377.386 C 248.685 378.847 248.794 380.789 248.129 382.279 C 247.573 383.525 246.324 384.619 244.99 384.904 C 243.666 385.187 242.163 384.612 241.08 383.799 C 239.854 382.878 238.833 381.419 238.644 379.897 C 238.465 378.455 238.922 376.744 239.98 375.748 Z" />

          {/* 15. right button */}
          <path fill={logoColors.buttons} stroke="rgb(0, 0, 0)" d="M 277.603 350.36 C 278.637 349.698 279.684 349.427 281.037 349.881 C 282.092 350.235 283.026 351.094 283.45 352.187 C 283.934 353.434 283.698 354.893 282.939 355.911 C 282.154 356.964 280.698 357.262 279.437 357.167 C 278.337 357.084 277.262 356.428 276.655 355.662 C 275.948 354.77 275.759 353.69 275.923 352.679 C 276.069 351.777 276.834 350.853 277.603 350.36 Z" />

          {/* 13. right trim */}
          <path stroke='rgb(0, 0, 0)' fill={logoColors.trim} d="M 243.793 417.416 C 243.793 417.416 243.391 410.204 243.713 406.535 C 244.112 401.987 244.915 397.456 246.12 393.053 C 247.416 388.317 251.278 379.255 251.278 379.255 C 251.278 379.255 253.8 373.306 254.996 369.115 C 255.943 365.796 256.362 360.776 257.917 356.884 C 259.729 352.349 261.885 347.732 265.271 344.212 C 268.256 341.109 276.155 337.06 276.155 337.06 L 284.393 334.231 L 287.784 339.672 C 287.784 339.672 283.596 342.141 281.875 343.823 C 279.345 346.296 275.518 352.367 275.576 352.367 C 275.576 352.367 272.438 362.672 271.636 367.979 C 270.444 375.868 270.261 391.794 270.377 391.88 C 270.493 391.966 269.133 417.209 269.133 417.209 L 243.793 417.416 Z" />

          {/* 14. right collar */}
          <path stroke='rgb(0, 0, 0)' fill={logoColors.trim} d="M 266.446 342.767 C 266.446 342.767 271.296 337.588 274.512 335.811 C 279.452 333.081 282.233 332.211 285.574 329.939 C 290.646 326.49 292.051 323.445 294.217 319.397 C 296.281 315.538 297.778 311.265 298.301 306.92 C 299.075 300.483 299.677 288.976 299.677 288.976 L 300.269 280.075 L 302.732 287.187 C 302.732 287.187 307.05 295.787 307.079 295.816 C 307.108 295.845 311.364 302.839 311.364 302.839 C 311.364 302.839 313.811 307.791 314.505 310.445 C 315.317 313.554 315.655 320.015 315.655 320.015 C 315.655 320.015 314.982 328.475 314.818 332.752 C 314.643 337.324 314.557 341.91 314.874 346.502 C 315.244 351.855 317.032 362.475 317.06 362.475 C 317.088 362.475 309.632 359.899 306.23 357.972 C 303.109 356.204 297.578 351.572 297.578 351.572 C 297.578 351.572 293.259 346.849 291.318 344.433 C 290.033 342.832 287.856 339.56 287.856 339.56 L 284.343 334.362 C 284.343 334.362 278.578 335.954 275.869 337.191 C 272.549 338.707 266.446 342.767 266.446 342.767 Z" />

        </g>


      </g>
      <g className={clickMeOn ? 'svg-on' : 'svg-off'} opacity={clickMeOn ? '0%' : '100%'} transform='translate(102,450)'>
        <rect transform='translate(-10, -70)' width='315' height='100' fill='#C0EFFA '></rect>
        <text x='0' y='0' >(click me!)</text>
      </g>
    </svg>

  </div>
)
}

export default Logo